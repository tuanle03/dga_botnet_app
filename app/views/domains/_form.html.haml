.domain-wrapper
  .domain-title Check Your Domain
  = form_with model: @domain, url: domains_path, method: :post, local: true do |f|
    .domain-field
      = f.text_field :name, required: true, class: 'domain-input-name', id: 'domain-name', autocomplete: 'off'
      = f.label :name, 'Domain Name'
      = f.submit 'Check', class: 'domain-btn'
    .div-flex
      .domain-field
        = f.select :model_type, @models_by_type.keys, {}, class: 'domain-input', id: 'model_type_select'
        = f.label :model_type, 'Model Type'
      .domain-field
        = f.select :model_identifier, [], {}, class: 'domain-input', id: 'model_identifier_select'
        = f.label :model_identifier, 'Model Name'

.model-info-wrapper
  .model-info-title Model Information
  .model-info-container
    .model-info
      %p Please select a model type and name to see the information.

:javascript
  document.addEventListener("DOMContentLoaded", function() {
    const modelsByType = #{ @models_by_type.to_json.html_safe };
    const modelClassifyInfo = #{ @model_classify_info.to_json.html_safe };
    const modelDetectInfo = #{ @model_detect_info.to_json.html_safe };
    const modelTypeSelect = document.getElementById('model_type_select');
    const modelIdentifierSelect = document.getElementById('model_identifier_select');
    const modelInfoContainer = document.querySelector('.model-info');

    function updateModelIdentifiers() {
      const selectedType = modelTypeSelect.value;
      const modelIdentifiers = modelsByType[selectedType] || [];
      modelIdentifierSelect.innerHTML = '';
      modelIdentifiers.forEach(function(identifier) {
        const option = document.createElement('option');
        option.value = identifier;
        option.textContent = identifier;
        modelIdentifierSelect.appendChild(option);
      });
      updateModelInfo();
    }

    function updateModelInfo() {
      const selectedIdentifier = modelIdentifierSelect.value;
      const selectedType = modelTypeSelect.value;
      modelInfoContainer.innerHTML = '';
      if (selectedType === 'classify') {
        const info = modelClassifyInfo[selectedIdentifier]
        if (info) {
          const infoList = document.createElement('ul');
          Object.keys(info).forEach(function(key) {
            const listItem = document.createElement('li');
            listItem.innerHTML = `<strong>${key}:</strong> ${info[key]}`;
            infoList.appendChild(listItem);
          });
          modelInfoContainer.appendChild(infoList);
        } else {
          modelInfoContainer.innerHTML = '<p>Please select a model type and identifier to see the information.</p>';
        }
      } else {
        const info = modelDetectInfo[selectedIdentifier]
        if (info) {
          const infoList = document.createElement('ul');
          Object.keys(info).forEach(function(key) {
            const listItem = document.createElement('li');
            listItem.innerHTML = `<strong>${key}:</strong> ${info[key]}`;
            infoList.appendChild(listItem);
          });
          modelInfoContainer.appendChild(infoList);
        } else {
          modelInfoContainer.innerHTML = '<p>Please select a model type and identifier to see the information.</p>';
        }
      }
    }

    modelTypeSelect.addEventListener('change', updateModelIdentifiers);
    modelIdentifierSelect.addEventListener('change', updateModelInfo);
    updateModelIdentifiers();

    var inputField = document.getElementById('domain-name');

    inputField.addEventListener('input', function(event) {
      var inputValue = event.target.value;
      if (/[^a-zA-Z0-9\-.]/.test(inputValue)) {
        event.target.value = inputValue.replace(/[^a-zA-Z0-9\-.]/g, '');
      }
    });
  });
